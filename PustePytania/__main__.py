from Bot import FileStats
import Config
from PustePytania.PustePytania import *
from PustePytania.RenameFiles import *
from Bot.Downloader import *
from Bot.Report import *
from discord.ext import commands

if __name__ == "__main__":

    if not PustePytania.check_config(Config):
        exit()

    # Parametry po≈ÇƒÖczenia
    bot = commands.Bot(command_prefix='!')

    @bot.event
    async def on_ready():
        """
        Wy≈õwietla komunikat o poprawnym po≈Çaczeniu
        """
        for guild in bot.guilds:
            print( f'{bot.user} jest po≈ÇƒÖczony z:\n{guild.name}(id: {guild.id})\n' )


    @bot.command(name="readchannel")
    async def readchannel(ctx):
        """
        Czyta i przetwarza obrazy z historii z kana≈Çu, na kt√≥rym zosta≈Ç wywo≈Çany.
        """
        await PustePytania.readchannel( ctx, Config.FILE_HEAD )
        RenameFiles.rename(Config.EXAM_NAME)


    @bot.command(name="readlast")
    async def readlast(ctx):
        """
        Czyta i przetwarza obrazy z historii do naj≈õwie≈ºszej reakcji üÜï (tylko ostatni tesst)
        """
        await PustePytania.readchannel( ctx, Config.FILE_HEAD, 1 )
        RenameFiles.rename(Config.EXAM_NAME)


    @bot.command(name="download")
    async def download(ctx, arg):
        """ Pobiera pliki o okre≈õlonym formacie z kana≈Çu. """
        await Downloader.get_all_from_channel(ctx, arg)


    @bot.command(name="echo")
    async def send_message(ctx, arg):
        """
        Wysy≈Ça wiadomo≈õƒá o podanej tre≈õci wiadomo≈õƒá ni≈ºej.

        Na przyk≈Çad:
            !echo "tre≈õƒá do wy≈õwietlenia"
        """
        await Report.echo(ctx, arg)


    @bot.comand(name="filestat")
    async def file_stats(ctx, arg):
        await FileStats.stats(ctx, arg)


    @bot.command(name="test")
    async def test_last_message(ctx):
        """
        Wysy≈Ça wiadomo≈õƒá z wynikiem ostatniej z przetworzonych wiadomo≈õci.
        """
        # todo
        raise NotImplemented()


    # Uruchomienie bota
    bot.run(Config.TOKEN)
